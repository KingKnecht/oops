<mah:MetroWindow x:Class="URF.MainWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:local="clr-namespace:URF"
                 xmlns:demo="clr-namespace:DURF.Demo"
                 xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                 mc:Ignorable="d"
                 d:DataContext="{d:DesignInstance d:Type=demo:MainWindowViewModel, IsDesignTimeCreatable=True}"
                 TextElement.FontWeight="Medium"
                 TextElement.FontSize="14"
                 FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
                 xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
                 GlowBrush="{DynamicResource AccentColorBrush}"
                 BorderThickness="1" WindowStartupLocation="CenterScreen"
                 Title="DURF Demo" HorizontalAlignment="Center" VerticalAlignment="Center" SizeToContent="WidthAndHeight"
                TextElement.Foreground="{DynamicResource MaterialDesignBody}"
                 Background="{DynamicResource MaterialDesignPaper}">
    <Window.Resources>
        <ResourceDictionary>
            <Style TargetType="TextBlock">
                <Setter Property="Margin" Value="3,0,0,3" />
            </Style>
            <Style TargetType="TextBox">
                <Setter Property="Margin" Value="3,0,0,3" />
                <Setter Property="Width" Value="150" />
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid x:Name="Intro" HorizontalAlignment="Center" VerticalAlignment="Center" MinHeight="200" MinWidth="300">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Button Content="Simple" ToolTip="Shows a simple demo of undo/redo with properties and a collection" Margin="0,0,20,0" Click="OnSimpleClick" HorizontalAlignment="Center" HorizontalContentAlignment="Center"/>
            <Button Grid.Column="1" Content="Threaded" ToolTip="Shows a complex demo of undo/redo with properties and collections with multiple threads manipulating them" Click="OnThreadedClick" Command="{Binding InThreadedDemo}" HorizontalAlignment="Center" HorizontalContentAlignment="Center" />
        </Grid>
        <Grid x:Name="Simple" Margin="20" Visibility="Collapsed">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <StackPanel Orientation="Horizontal">
                <Button Content="Back" Margin="10,0,10,0" Click="OnBackClick" />
                <Menu >
                    <MenuItem Header="Track" Command="{Binding Track}" />
                    <MenuItem Command="{Binding CommitChanges}" >
                        <MenuItem.Header>
                            <TextBlock>
                            <Run Text="Commit " /><Run Text="{Binding Current.TrackedChanges.Count, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" /><Run Text=" changes" />
                            </TextBlock>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem x:Name="UndoMenu" Header="Undo..." IsEnabled="{Binding Manager.Undoables.Count, Converter={StaticResource CountToEnabledConverter}, UpdateSourceTrigger=PropertyChanged}"  />
                    <MenuItem x:Name="RedoMenu" Header="Redo..." IsEnabled="{Binding Manager.Redoables.Count, Converter={StaticResource CountToEnabledConverter}, UpdateSourceTrigger=PropertyChanged}" />
                </Menu>
            </StackPanel>
            <Separator Grid.Row="1" />
            <TextBlock Text="Properties Demonstration" Grid.Row="2" FontSize="16" FontWeight="Bold" HorizontalAlignment="Center" Margin="0,20,0,0"/>
            <UniformGrid Grid.Row="3" Columns="2" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,20,0,0">
                <TextBlock Text="First Name: " />
                <TextBox Text="{Binding FirstName}" IsReadOnly="{Binding ThreadedDemo}" />
                <TextBlock Text="Last Name: " />
                <TextBox Text="{Binding LastName}" IsReadOnly="{Binding ThreadedDemo}"/>
                <TextBlock Text="Address: " />
                <TextBox Text="{Binding Address}" IsReadOnly="{Binding ThreadedDemo}"/>
                <TextBlock Text="City: " />
                <TextBox Text="{Binding City}" IsReadOnly="{Binding ThreadedDemo}"/>
                <TextBlock Text="State: " />
                <TextBox Text="{Binding State}" IsReadOnly="{Binding ThreadedDemo}"/>
                <TextBlock Text="Zip: " />
                <TextBox Text="{Binding Zip}" IsReadOnly="{Binding ThreadedDemo}"/>
            </UniformGrid>
            <Separator Grid.Row="4" Margin="0,20,0,0" />
            <TextBlock Text="Collection Demonstration" Grid.Row="5" FontSize="16" FontWeight="Bold" HorizontalAlignment="Center" Margin="0,20,0,0"/>
            <Grid Grid.Row="6">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,10,0,0" Visibility="{Binding ThreadedDemo, Converter={StaticResource InverseBoolToVisConverter}}">
                    <Button Content="Add" Margin="0,0,20,0" Command="{Binding AddItem}" />
                    <Button Content="Remove" Command="{Binding RemoveItem}" />
                </StackPanel>
                <GroupBox Grid.Row="1" Header="Items" Margin="0,10,0,0">
                    <ListBox ItemsSource="{Binding Items, Mode=OneWay}" MinHeight="60" MaxHeight="300" >
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <TextBlock Text="{Binding}" />
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </GroupBox>
            </Grid>
        </Grid>
    </Grid>
</mah:MetroWindow>